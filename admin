import React, { useMemo, useState, useEffect } from 'react';
import { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table';
import axios from 'axios';
import GlobalFilter from './GlobalFilter';

const MovieList = () => {
  const [movies, setMovies] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchMovies = async () => {
      const response = await axios.get('/api/movies');
      setMovies(response.data);
      setLoading(false);
    };

    fetchMovies();
  }, []);

  const columns = useMemo(
    () => [
      {
        Header: 'Title',
        accessor: 'title',
      },
      {
        Header: 'Release Year',
        accessor: 'release_year',
      },
      {
        Header: 'Rating',
        accessor: 'rating',
      },
      {
        Header: 'Duration',
        accessor: 'duration',
      },
      {
        Header: 'Plot',
        accessor: 'plot',
      },
      {
        Header: 'Genres',
        accessor: 'genres',
        Cell: ({ cell: { value } }) => value.map((genre) => genre.name).join(', '),
      },
    ],
    []
  );

  const {
    getTableProps,
    getTableBodyProps,
    headerGroups,
    prepareRow,
    page,
    nextPage,
    previousPage,
    canNextPage,
    canPreviousPage,
    pageOptions,
    state,
    setGlobalFilter,
  } = useTable(
    {
      columns,
      data: movies,
      initialState: { pageSize: 10 },
    },
    useGlobalFilter,
    useSortBy,
    usePagination
  );

  const { globalFilter, pageIndex } = state;

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div>
      <h1 className="text-3xl mb-4">Movies</h1>
      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />
      <table {...getTableProps()} className="min-w-full bg-white">
        <thead>
          {headerGroups.map((headerGroup) => (
            <tr {...headerGroup.getHeaderGroupProps()}>
              {headerGroup.headers.map((column) => (
                <th
                  {...column.getHeaderProps(column.getSortByToggleProps())}
                  className="px-6 py-3 border-b-2 border-gray-300 bg-gray-100 text-left text-xs leading-4 font-medium text-gray-600 uppercase tracking-wider"
                >
                  {column.render('Header')}
                  <span>
                    {column.isSorted
                      ? column.isSortedDesc
                        ? ' ðŸ”½'
                        : ' ðŸ”¼'
                      : ''}
                  </span>
                </th>
              ))}
            </tr>
          ))}
        </thead>
        <tbody {...getTableBodyProps()}>
          {page.map((row) => {
            prepareRow(row);
            return (
              <tr {...row.getRowProps()}>
                {row.cells.map((cell) => (
                  <td
                    {...cell.getCellProps()}
                    className="px-6 py-4 whitespace-no-wrap border-b border-gray-500"
                  >
                    {cell.render('Cell')}
                  </td>
                ))}
              </tr>
            );
          })}
        </tbody>
      </table>
      <div className="flex justify-between mt-4">
        <button
          onClick={() => previousPage()}
          disabled={!canPreviousPage}
          className="px-4 py-2 border border-gray-300 rounded-md text-gray-600 bg-white hover:bg-gray-100"
        >
          Previous
        </button>
        <span>
          Page{' '}
          <strong>
            {pageIndex + 1} of {pageOptions.length}
          </strong>
        </span>
        <button
          onClick={() => nextPage()}
          disabled={!canNextPage}
          className="px-4 py-2 border border-gray-300 rounded-md text-gray-600 bg-white hover:bg-gray-100"
        >
          Next
        </button>
      </div>
    </div>
  );
};

export default MovieList;



import React from 'react';

const GlobalFilter = ({ filter, setFilter }) => {
  return (
    <span className="flex items-center mb-4">
      Search:{' '}
      <input
        value={filter || ''}
        onChange={(e) => setFilter(e.target.value)}
        className="ml-2 p-2 border border-gray-300 rounded-md"
        placeholder="Type to search..."
      />
    </span>
  );
};

export default GlobalFilter;



 

import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import MovieList from './MovieList';
import MovieForm from './MovieForm';
import GenreList from './GenreList';
import ActorList from './ActorList';
import DirectorList from './DirectorList';

const AdminPanel = () => {
  return (
    <Router>
      <div className="flex h-screen bg-gray-100">
        <Sidebar />
        <div className="flex-1 p-6">
          <Routes>
            <Route path="/admin/movies" element={<MovieList />} />
            <Route path="/admin/movies/new" element={<MovieForm />} />
            <Route path="/admin/genres" element={<GenreList />} />
            <Route path="/admin/actors" element={<ActorList />} />
            <Route path="/admin/directors" element={<DirectorList />} />
          </Routes>
        </div>
      </div>
    </Router>
  );
};

const Sidebar = () => (
  <div className="w-64 bg-gray-800 text-white">
    <div className="p-4 text-xl font-semibold">Admin Panel</div>
    <ul className="mt-6">
      <li className="px-4 py-2 hover:bg-gray-700">
        <Link to="/admin/movies">Movies</Link>
      </li>
      <li className="px-4 py-2 hover:bg-gray-700">
        <Link to="/admin/movies/new">Add Movie</Link>
      </li>
      <li className="px-4 py-2 hover:bg-gray-700">
        <Link to="/admin/genres">Genres</Link>
      </li>
      <li className="px-4 py-2 hover:bg-gray-700">
        <Link to="/admin/actors">Actors</Link>
      </li>
      <li className="px-4 py-2 hover:bg-gray-700">
        <Link to="/admin/directors">Directors</Link>
      </li>
    </ul>
  </div>
);

export default AdminPanel;



import React, { useMemo } from 'react';
import { useTable, usePagination, useSortBy, useGlobalFilter } from 'react-table';
import { Link } from 'react-router-dom';
import MOCK_DATA from './MOCK_DATA.json'; // Replace with actual data fetching
import { COLUMNS } from './columns'; // Define columns separately

const MovieList = () => {
  const columns = useMemo(() => COLUMNS, []);
  const data = useMemo(() => MOCK_DATA, []);

  const {
    getTableProps,
    getTableBodyProps,
    headerGroups,
    page,
    prepareRow,
    state,
    setGlobalFilter,
    canPreviousPage,
    canNextPage,
    pageOptions,
    nextPage,
    previousPage,
    setPageSize,
  } = useTable(
    {
      columns,
      data,
    },
    useGlobalFilter,
    useSortBy,
    usePagination
  );

  const { globalFilter, pageIndex, pageSize } = state;

  return (
    <div>
      <h1 className="text-2xl mb-4">Movies</h1>
      <div className="mb-4">
        <input
          value={globalFilter || ''}
          onChange={(e) => setGlobalFilter(e.target.value)}
          placeholder="Search movies..."
          className="p-2 border border-gray-300 rounded"
        />
      </div>
      <table {...getTableProps()} className="min-w-full bg-white">
        <thead>
          {headerGroups.map(headerGroup => (
            <tr {...headerGroup.getHeaderGroupProps()}>
              {headerGroup.headers.map(column => (
                <th {...column.getHeaderProps(column.getSortByToggleProps())} className="px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  {column.render('Header')}
                  <span>
                    {column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : ''}
                  </span>
                </th>
              ))}
            </tr>
          ))}
        </thead>
        <tbody {...getTableBodyProps()}>
          {page.map(row => {
            prepareRow(row);
            return (
              <tr {...row.getRowProps()} className="hover:bg-gray-100">
                {row.cells.map(cell => (
                  <td {...cell.getCellProps()} className="px-6 py-4 border-b border-gray-200">
                    {cell.render('Cell')}
                  </td>
                ))}
              </tr>
            );
          })}
        </tbody>
      </table>
      <div className="flex items-center justify-between mt-4">
        <button onClick={() => previousPage()} disabled={!canPreviousPage} className="p-2 border border-gray-300 rounded">
          Previous
        </button>
        <span>
          Page{' '}
          <strong>
            {pageIndex + 1} of {pageOptions.length}
          </strong>{' '}
        </span>
        <button onClick={() => nextPage()} disabled={!canNextPage} className="p-2 border border-gray-300 rounded">
          Next
        </button>
        <select
          value={pageSize}
          onChange={e => setPageSize(Number(e.target.value))}
          className="p-2 border border-gray-300 rounded"
        >
          {[10, 20, 30, 40, 50].map(pageSize => (
            <option key={pageSize} value={pageSize}>
              Show {pageSize}
            </option>
          ))}
        </select>
      </div>
    </div>
  );
};

export default MovieList;





export const COLUMNS = [
  {
    Header: 'Title',
    accessor: 'title',
  },
  {
    Header: 'Release Year',
    accessor: 'release_year',
  },
  {
    Header: 'Rating',
    accessor: 'rating',
  },
  {
    Header: 'Plot',
    accessor: 'plot',
  },
  {
    Header: 'Duration',
    accessor: 'duration',
  },
  {
    Header: 'Actions',
    Cell: ({ row }) => (
      <div className="flex space-x-2">
        <Link to={`/admin/movies/edit/${row.original.id}`} className="text-blue-600 hover:text-blue-800">
          Edit
        </Link>
        <button className="text-red-600 hover:text-red-800">Delete</button>
      </div>
    ),
  },
];



[
  {
    "id": 1,
    "title": "Inception",
    "release_year": 2010,
    "rating": 8.8,
    "plot": "A thief who steals corporate secrets through the use of dream-sharing technology.",
    "duration": 148
  },
  {
    "id": 2,
    "title": "The Dark Knight",
    "release_year": 2008,
    "rating": 9.0,
    "plot": "When the menace known as the Joker emerges from his mysterious past.",
    "duration": 152
  },
  // Add more mock data as needed
]





import React from 'react';
import AdminPanel from './AdminPanel';

function App() {
  return (
    <div className="App">
      <AdminPanel />
    </div>
  );
}

export default App;

