import CommonHeader from 'components/layouts/components/Header/Header';
import Card from 'components/layouts/components/MovieCard/Card';
import { useAxiosGet } from 'hook/useAxios';
import { Fragment, useEffect, useState } from 'react';
import { addToWatchlist, WatchlisType } from 'redux-toolkit/slices/watchlistSlice';
import { useDispatch } from 'react-redux';
import { ToastContainer } from 'react-toastify';
import HeaderCarousel from 'components/layouts/components/Header/HeaderCarousel';
import MovieModal from 'components/layouts/components/Modal';

const Home = () => {
  const [showModal, setShowModal] = useState(false);
  const [MovieApi] = useAxiosGet();
  const dispatch = useDispatch();
  const [movieData, setMovieData] = useState<WatchlisType[]>([]);
  const [oneMovie, setOneMovie] = useState<WatchlisType | null>(null);
  const userId = 1; // Assume userId is 1 for now, replace with actual userId from your auth state

  const GetData = async () => {
    const response = await MovieApi('/movie');
    const movie: WatchlisType[] = response?.data?.data.movie;
    setMovieData(movie);
  };

  const onAddToWatchlist = (movie: WatchlisType) => {
    dispatch(addToWatchlist(movie));
    console.log(movie);
  };

  const handleOpen = () => setShowModal(!showModal);

  const [getDetailsApi] = useAxiosGet();

  const getDetails = async (slug: string | undefined) => {
    if (slug) {
      const response = await getDetailsApi(`/movie/${slug}`);
      const data = response.data.data;
      setOneMovie(data);
      setShowModal(true);
    }
  };

  useEffect(() => {
    GetData();
  }, []);

  return (
    <div className="bg-black min-h-[calc(100dvh_-_0px)] ">
      <CommonHeader />
      <ToastContainer />
      <HeaderCarousel />
      <h2 className="text-3xl text-center font-bold mt-4 text-white bg-black">
        Recommended for You
      </h2>
      <div className="grid sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8 bg-black">
        {movieData ? (
          movieData.map((movie) => (
            <Fragment key={movie.id}>
              <Card
                id={movie.id}
                title={movie.title}
                release_year={movie.release_year}
                slug={movie.slug}
                rating={movie.rating}
                plot={`${movie.plot?.substring(0, 190)}....`}
                image={movie.images[0]?.image_url}
                onClick={() => onAddToWatchlist({ ...movie })}
                getDetails={() => getDetails(movie.slug)}
                userId={userId} // Pass userId to Card component
              />
            </Fragment>
          ))
        ) : (
          <h1>Movie not available</h1>
        )}
      </div>

      {showModal && oneMovie && (
        <MovieModal
          handleOpen={handleOpen}
          id={oneMovie.id}
          title={oneMovie.title}
          release_year={oneMovie.release_year}
          slug={oneMovie.slug}
          rating={oneMovie.rating}
          plot={oneMovie.plot}
          image={oneMovie.images[0]?.image_url}
        />
      )}
    </div>
  );
};

export default Home;
