const formatDate = (date: Date, format: string): string => {
  const map: { [key: string]: string } = {
    'dd': ('0' + date.getDate()).slice(-2),
    'MMMM': date.toLocaleString('default', { month: 'long' }),
    'MMM': date.toLocaleString('default', { month: 'short' }),
    'yyyy': date.getFullYear().toString(),
    'z': date.toString().match(/\(([A-Za-z\s].*)\)/)?.[1] || '',
    'h': ((date.getHours() % 12) || 12).toString(),
    'a': date.getHours() < 12 ? 'AM' : 'PM',
    'mm': ('0' + date.getMinutes()).slice(-2),
  };

  return format.replace(/dd|MMMM|MMM|yyyy|z|h|a|mm/g, (matched) => map[matched]);
};


import React from "react";
import { Event } from "../types";

const MINUTES_IN_DAY = 24 * 60;

type DayEventProps = {
  day: Date;
  event: Event;
  index: number;
  grouplength: number;
  containerHeight: number;
};

const startOfDay = (date: Date): Date => {
  const result = new Date(date);
  result.setHours(0, 0, 0, 0);
  return result;
};

const differenceInMinutes = (date1: Date, date2: Date): number => {
  const diff = date1.getTime() - date2.getTime();
  return Math.floor(diff / (1000 * 60));
};

const formatDate = (date: Date, format: string): string => {
  const map: { [key: string]: string } = {
    'dd': ('0' + date.getDate()).slice(-2),
    'MMMM': date.toLocaleString('default', { month: 'long' }),
    'MMM': date.toLocaleString('default', { month: 'short' }),
    'yyyy': date.getFullYear().toString(),
    'z': date.toString().match(/\(([A-Za-z\s].*)\)/)?.[1] || '',
    'h': ((date.getHours() % 12) || 12).toString(),
    'a': date.getHours() < 12 ? 'AM' : 'PM',
    'mm': ('0' + date.getMinutes()).slice(-2),
  };

  return format.replace(/dd|MMMM|MMM|yyyy|z|h|a|mm/g, (matched) => map[matched]);
};

export const DayEvent: React.FC<DayEventProps> = ({
  day,
  event,
  index,
  grouplength,
  containerHeight,
}) => {
  const today = startOfDay(day);

  const eventDuration = differenceInMinutes(event.end_date, event.start_date);

  const generateBoxStyle = () => {
    const minutesPassed = differenceInMinutes(event.start_date, today);

    const percentage = minutesPassed / MINUTES_IN_DAY;

    const top = percentage * containerHeight;
    const height = (eventDuration / MINUTES_IN_DAY) * containerHeight;

    const isLast = index === grouplength - 1;
    let widthPercentage = grouplength === 1 ? 1 : (1 / grouplength) * 1.7;

    if (isLast) {
      widthPercentage = 1 / grouplength;
    }

    const styles = {
      top,
      height,
      padding: "2px 8px",
      zIndex: 100 + index,
      width: `calc((100% - 96px) * ${widthPercentage})`,
    };

    if (isLast) {
      return { ...styles, right: 0 };
    }

    return {
      ...styles,
      left: `calc(100px + 100% * ${(1 / grouplength) * index})`,
    };
  };

  return (
    <div
      style={generateBoxStyle()}
      className="bg-blue-400 border border-white rounded cursor-pointer absolute"
    >
      <h1 className="text-white text-xs">
        {`${event.title}, 
        ${formatDate(event.start_date, "h:mm a")} - 
        ${formatDate(event.end_date, "h:mm a")}`}
      </h1>
    </div>
  );
};
