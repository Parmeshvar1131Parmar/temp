import React, { useState } from "react";
import { cn } from "../../utils";
import type { Event } from "../types";

type WeekDayViewProps = {
  day: Date;
  events?: Event[];
};

const startOfDay = (date: Date): Date => {
  const result = new Date(date);
  result.setHours(0, 0, 0, 0);
  return result;
};

const endOfDay = (date: Date): Date => {
  const result = new Date(date);
  result.setHours(23, 59, 59, 999);
  return result;
};

const eachHourOfInterval = (interval: { start: Date, end: Date }): Date[] => {
  const { start, end } = interval;
  const hours = [];
  const current = new Date(start);

  while (current <= end) {
    hours.push(new Date(current));
    current.setHours(current.getHours() + 1);
  }

  return hours;
};

export const WeekDayView: React.FC<WeekDayViewProps> = ({
  day,
  events = [],
}) => {
  const [ref, setRef] = useState<HTMLDivElement | null>(null);

  const hours = eachHourOfInterval({
    start: startOfDay(day),
    end: endOfDay(day),
  });

  return (
    <div
      aria-label={"Events slot for " + day.toDateString()}
      className="min-w-36 h-full flex flex-1 relative"
    >
      <div className="w-[95%] h-full absolute">
        <div className="w-full h-full relative" ref={(ref) => setRef(ref)} />
      </div>
      <div className="w-full flex flex-col">
        {hours.map((time, index) => (
          <div
            key={time.toISOString()}
            className={cn(
              "h-14 w-full border-l",
              index !== hours.length - 1 && "border-b"
            )}
          />
        ))}
      </div>
    </div>
  );
};
